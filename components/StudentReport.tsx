'use client'

import React from 'react'
import { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer'

interface StudentReportProps {
  stateDistribution: { state: string; count: number }[]
  cityDistribution: { city: string; count: number }[]
  graduationYearDistribution: { year: number; count: number }[]
  totalStudents: number
  promisingStudentsCount: number
  userName: string
}

const styles = StyleSheet.create({
  page: {
    padding: 30,
    backgroundColor: '#ffffff',
  },
  header: {
    fontSize: 24,
    marginBottom: 20,
    textAlign: 'center',
    color: '#1a1a1a',
    fontWeight: 'bold',
  },
  subHeader: {
    fontSize: 20,
    marginBottom: 20,
    color: '#4a4a4a',
    fontWeight: 'bold',
    textAlign: 'center',
  },
  section: {
    margin: 10,
    padding: 10,
    flexGrow: 1,
  },
  summaryBox: {
    backgroundColor: '#f5f5f5',
    padding: 20,
    margin: '40px 0',
    borderRadius: 5,
  },
  summaryText: {
    fontSize: 16,
    marginBottom: 10,
    color: '#2a2a2a',
    textAlign: 'center',
  },
  chartContainer: {
    marginTop: 40,
    padding: 20,
    flexGrow: 1,
  },
  barContainer: {
    height: 25,
    flexDirection: 'row',
    marginBottom: 15,
    alignItems: 'center',
  },
  bar: {
    height: '100%',
    backgroundColor: '#4a90e2',
    borderRadius: 4,
  },
  barLabel: {
    fontSize: 12,
    marginLeft: 10,
    color: '#2a2a2a',
  },
  footer: {
    position: 'absolute',
    bottom: 30,
    left: 30,
    right: 30,
    fontSize: 10,
    color: '#666666',
    textAlign: 'center',
  },
  footerText: {
    marginBottom: 5,
  },
  yearBar: {
    height: 30,
    flexDirection: 'row',
    marginBottom: 15,
    alignItems: 'center',
  },
  yearLabel: {
    width: 60,
    fontSize: 12,
    marginRight: 10,
    color: '#2a2a2a',
  },
  yearBarFill: {
    height: '100%',
    backgroundColor: '#4a90e2',
    borderRadius: 4,
  },
  yearCount: {
    fontSize: 12,
    marginLeft: 10,
    color: '#2a2a2a',
  }
})

export function StudentReport({
  stateDistribution,
  cityDistribution,
  graduationYearDistribution,
  totalStudents,
  promisingStudentsCount,
  userName,
}: StudentReportProps) {
  const promisingPercentage = ((promisingStudentsCount / totalStudents) * 100).toFixed(1)
  const currentDate = new Date().toLocaleDateString()

  // Function to create a simple bar chart for state and city distributions
  const renderBarChart = (data: { label: string; count: number }[]) => {
    const sortedData = [...data].sort((a, b) => b.count - a.count)
    const maxCount = Math.max(...sortedData.map(item => item.count))

    return sortedData.map((item, index) => (
      <View key={index} style={styles.barContainer}>
        <View style={[styles.bar, { width: `${(item.count / maxCount) * 70}%` }]} />
        <Text style={styles.barLabel}>
          {item.label}: {item.count} students
        </Text>
      </View>
    ))
  }

  // Function to render graduation year distribution
  const renderGraduationYearChart = () => {
    const sortedYears = [...graduationYearDistribution].sort((a, b) => a.year - b.year)
    const maxCount = Math.max(...sortedYears.map(item => item.count))

    return sortedYears.map((item, index) => (
      <View key={index} style={styles.yearBar}>
        <Text style={styles.yearLabel}>{item.year}</Text>
        <View style={[styles.yearBarFill, { width: `${(item.count / maxCount) * 70}%` }]} />
        <Text style={styles.yearCount}>{item.count} students</Text>
      </View>
    ))
  }

  return (
    <Document>
      {/* Summary Page */}
      <Page size="A4" style={styles.page}>
        <Text style={styles.header}>Student Analytics Report</Text>
        <View style={styles.summaryBox}>
          <Text style={styles.summaryText}>Total Students: {totalStudents}</Text>
          <Text style={styles.summaryText}>Promising Students: {promisingStudentsCount}</Text>
          <Text style={styles.summaryText}>Promising Student Percentage: {promisingPercentage}%</Text>
          <Text style={styles.summaryText}>Report Generated: {currentDate}</Text>
          <Text style={styles.summaryText}>Generated By: {userName}</Text>
        </View>
        <View style={styles.footer}>
          <Text style={styles.footerText}>Generated by {userName}</Text>
          <Text>Student Analytics Report • Page 1 of 4</Text>
        </View>
      </Page>

      {/* State Distribution Page */}
      <Page size="A4" style={styles.page}>
        <Text style={styles.subHeader}>State Distribution</Text>
        <View style={styles.chartContainer}>
          {renderBarChart(
            stateDistribution.map(item => ({ 
              label: item.state, 
              count: item.count 
            }))
          )}
        </View>
        <View style={styles.footer}>
          <Text style={styles.footerText}>Generated by {userName}</Text>
          <Text>Student Analytics Report • Page 2 of 4</Text>
        </View>
      </Page>

      {/* City Distribution Page */}
      <Page size="A4" style={styles.page}>
        <Text style={styles.subHeader}>City Distribution</Text>
        <View style={styles.chartContainer}>
          {renderBarChart(
            cityDistribution.map(item => ({ 
              label: item.city, 
              count: item.count 
            }))
          )}
        </View>
        <View style={styles.footer}>
          <Text style={styles.footerText}>Generated by {userName}</Text>
          <Text>Student Analytics Report • Page 3 of 4</Text>
        </View>
      </Page>

      {/* Graduation Year Distribution Page */}
      <Page size="A4" style={styles.page}>
        <Text style={styles.subHeader}>Graduation Year Distribution</Text>
        <View style={styles.chartContainer}>
          {renderGraduationYearChart()}
        </View>
        <View style={styles.footer}>
          <Text style={styles.footerText}>Generated by {userName}</Text>
          <Text>Student Analytics Report • Page 4 of 4</Text>
        </View>
      </Page>
    </Document>
  )
} 